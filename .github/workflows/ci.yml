name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go: ['1.23.2']
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go }}
        cache: true

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage.out

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.2'
        cache: true

    - name: Run go vet
      run: go vet ./...

    - name: Check formatting
      run: |
        if [ -n "$(gofmt -l .)" ]; then
          echo "Go code is not formatted:"
          gofmt -d .
          exit 1
        fi

    - name: Run staticcheck
      uses: dominikh/staticcheck-action@v1
      with:
        version: "latest"
        install-go: false

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.2'
        cache: true

    - name: Build binary
      run: |
        go build -v -o ratelimiter main.go
        ./ratelimiter -help

    - name: Cross-compile
      run: |
        GOOS=linux GOARCH=amd64 go build -o ratelimiter-linux-amd64 main.go
        GOOS=darwin GOARCH=amd64 go build -o ratelimiter-darwin-amd64 main.go
        GOOS=darwin GOARCH=arm64 go build -o ratelimiter-darwin-arm64 main.go
        GOOS=windows GOARCH=amd64 go build -o ratelimiter-windows-amd64.exe main.go

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: |
          ratelimiter-*